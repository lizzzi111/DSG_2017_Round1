data$is_listened <- prediction
# finction to submit predictions
submit <- function(prediction, data, folder, file = "test.csv") {
# displaying error messages
if (length(prediction) != nrow(data)) {stop("Predictions and dataset are not the same length")}
# creadting dataset with relevant coloumns
data <- data[, c("sample_id", "is_listened")]
# adding predictions to the data
data$is_listened <- prediction
# exporting predictions
write.table(data, row.names = F, col.names = T, quote = F, sep = ",", file = file.path(folder, name))
}
submit(pred, data = data.test, folder = subm.folder, file = "naive.csv")
# finction to submit predictions
submit <- function(prediction, data, folder, file = "test.csv") {
# displaying error messages
if (length(prediction) != nrow(data)) {stop("Predictions and dataset are not the same length")}
# creadting dataset with relevant coloumns
data <- data[, c("sample_id", "is_listened")]
# adding predictions to the data
data$is_listened <- prediction
# exporting predictions
write.table(data, row.names = F, col.names = T, quote = F, sep = ",", file = file.path(folder, file))
}
submit(pred, data = data.test, folder = subm.folder, file = "naive.csv")
data.test$user_id[1:10]
data.train$user_id[1:10]
artist <- data.test$artist_id[i]
i=1
artist <- data.test$artist_id[i]
user   <- data.test$user_id[i]
artist <- data.test$artist_id[i]
data.train$artist_id[data.train$user_id == user]
history <- data.train$artist_id[data.train$user_id == user]
artist
history
naive.pred <- rep(NA, nrow(data.test))
# empty prediction vector
naive.pred <- rep(NA, nrow(data.test))
# checking if the artist has already been played
for (i in 1:nrow(data.test)) {
# displaying observation number
print(paste0(i, "/", nrow(data.test)))
# extracting artist and user
user   <- data.test$user_id[i]
artist <- data.test$artist_id[i]
# extracting artists played by user
history <- data.train$artist_id[data.train$user_id == user]
# checking if this artist has already been played
if (artist %in% history) {
naive.pred[i] <- 1
}else{
naive.pred[i] <- 0
}
}
summary(naive.pred)
###################################
#                                 #
#             SETTINGS            #
#                                 #
###################################
# clearing the memory
rm(list = ls())
# setting work directory
work.folder <- "/Users/Kozodoi/Documents/Competitions/DSG_2017"
setwd(work.folder)
# setting inner folders
code.folder <- "codes"
data.folder <- "data"
func.folder <- "functions"
subm.folder <- "submissions"
# loading functions
source(file.path(code.folder, "code_0_helper_functions.R"))
###################################
#                                 #
#            NAIVE MODEL          #
#                                 #
###################################
# loading data sets
load(file.path(data.folder, "data_train.Rda"))
load(file.path(data.folder, "data_test.Rda"))
# dropping irrelevant data
data.train <- data.train[, c("user_id", "artist_id")]
data.test  <- data.test[,  c("user_id", "artist_id", "sample_id")]
# empty prediction vector
naive.pred <- rep(NA, nrow(data.test))
# checking if the artist has already been played
for (i in 1:nrow(data.test)) {
# displaying observation number
print(paste0(i, "/", nrow(data.test)))
# extracting artist and user
user   <- data.test$user_id[i]
artist <- data.test$artist_id[i]
# extracting artists played by user
history <- data.train$artist_id[data.train$user_id == user]
# checking if this artist has already been played
if (artist %in% history) {
naive.pred[i] <- 1
}else{
naive.pred[i] <- 0
}
}
###################################
#                                 #
#             SETTINGS            #
#                                 #
###################################
# clearing the memory
rm(list = ls())
# setting work directory
work.folder <- "/Users/Kozodoi/Documents/Competitions/DSG_2017"
setwd(work.folder)
# setting inner folders
code.folder <- "codes"
data.folder <- "data"
func.folder <- "functions"
subm.folder <- "submissions"
# loading functions
source(file.path(code.folder, "code_0_helper_functions.R"))
###################################
#                                 #
#            NAIVE MODEL          #
#                                 #
###################################
# loading data sets
load(file.path(data.folder, "data_train.Rda"))
load(file.path(data.folder, "data_test.Rda"))
# dropping irrelevant data
data.train <- data.train[, c("user_id", "artist_id")]
data.test  <- data.test[,  c("user_id", "artist_id", "sample_id")]
# empty prediction vector
naive.pred <- rep(NA, nrow(data.test))
# checking if the artist has already been played
for (i in 1:nrow(data.test)) {
# displaying observation number
print(paste0(i, "/", nrow(data.test)))
# extracting artist and user
user   <- data.test$user_id[i]
artist <- data.test$artist_id[i]
# extracting artists played by user
history <- data.train$artist_id[data.train$user_id == user]
# checking if this artist has already been played
if (artist %in% history) {
naive.pred[i] <- 1
}else{
naive.pred[i] <- 0
}
}
###################################
#                                 #
#             SETTINGS            #
#                                 #
###################################
# clearing the memory
rm(list = ls())
# setting work directory
work.folder <- "/Users/Kozodoi/Documents/Competitions/DSG_2017"
setwd(work.folder)
# setting inner folders
code.folder <- "codes"
data.folder <- "data"
func.folder <- "functions"
subm.folder <- "submissions"
# loading functions
source(file.path(code.folder, "code_0_helper_functions.R"))
###################################
#                                 #
#            NAIVE MODEL          #
#                                 #
###################################
# loading data sets
load(file.path(data.folder, "data_train.Rda"))
load(file.path(data.folder, "data_test.Rda"))
# dropping irrelevant data
data.train <- data.train[, c("user_id", "artist_id", "sample_id")]
data.test  <- data.test[,  c("user_id", "artist_id", "sample_id")]
# empty prediction vector
naive.pred <- rep(NA, nrow(data.test))
# checking if the artist has already been played
for (i in 1:nrow(data.test)) {
# displaying observation number
print(paste0(i, "/", nrow(data.test)))
# extracting artist and user
user   <- data.test$user_id[i]
artist <- data.test$artist_id[i]
# extracting artists played by user
history <- data.train$artist_id[data.train$user_id == user]
# checking if this artist has already been played
if (artist %in% history) {
naive.pred[i] <- 1
}else{
naive.pred[i] <- 0
}
}
data.train <- data.train[!(duplicated(data.train)), ]
###################################
#                                 #
#             SETTINGS            #
#                                 #
###################################
# clearing the memory
rm(list = ls())
# setting work directory
work.folder <- "/Users/Kozodoi/Documents/Competitions/DSG_2017"
setwd(work.folder)
# setting inner folders
code.folder <- "codes"
data.folder <- "data"
func.folder <- "functions"
subm.folder <- "submissions"
# loading libraries
library(anytime)
# loading functions
source(file.path(code.folder, "code_0_helper_functions.R"))
###################################
#                                 #
#            NAIVE MODEL          #
#                                 #
###################################
# loading data sets
load(file.path(data.folder, "data_train.Rda"))
load(file.path(data.folder, "data_test.Rda"))
# keeping only the artist data
data.train <- data.train[, c("user_id", "artist_id", "sample_id")]
data.test  <- data.test[,  c("user_id", "artist_id", "sample_id")]
# dropping duplicates
data.train <- data.train[!(duplicated(data.train)), ]
# empty prediction vector
naive.pred <- rep(NA, nrow(data.test))
# checking if the artist has already been played
for (i in 1:nrow(data.test)) {
# displaying observation number
print(paste0(i, "/", nrow(data.test)))
# extracting artist and user
user   <- data.test$user_id[i]
artist <- data.test$artist_id[i]
# extracting artists played by user
history <- data.train$artist_id[data.train$user_id == user]
# checking if this artist has already been played
if (artist %in% history) {
naive.pred[i] <- 1
}else{
naive.pred[i] <- 0
}
}
# creating submission
submit(naive.pred, data = data.test, folder = subm.folder, file = "naive.csv")
submit(naive.pred, data = data.test, folder = subm.folder, file = "naive_submission.csv")
load(file.path(data.folder, "data_test.Rda"))
data.test  <- data.test[,  c("user_id", "artist_id", "sample_id", "is_listened")]
=
submit(naive.pred, data = data.test, folder = subm.folder, file = "naive_submission.csv")
summary(naive.pred)
###################################
#                                 #
#             SETTINGS            #
#                                 #
###################################
# clearing the memory
rm(list = ls())
# setting work directory
work.folder <- "/Users/Kozodoi/Documents/Competitions/DSG_2017"
setwd(work.folder)
# setting inner folders
code.folder <- "codes"
data.folder <- "data"
func.folder <- "functions"
subm.folder <- "submissions"
# loading libraries
library(anytime)
# loading functions
source(file.path(code.folder, "code_0_helper_functions.R"))
###################################
#                                 #
#            NAIVE MODEL          #
#                                 #
###################################
# loading data sets
load(file.path(data.folder, "data_train.Rda"))
load(file.path(data.folder, "data_test.Rda"))
# keeping the artist data
data.train <- data.train[, c("user_id", "artist_id", "sample_id", "is_listened")]
data.test  <- data.test[,  c("user_id", "artist_id", "sample_id", "is_listened")]
summary(data.train)
data.train <- data.train[data.train$is_listened == 1, ]
data.train <- data.train[!(duplicated(data.train)),   ]
naive.pred <- rep(NA, nrow(data.test))
# checking if the artist has already been played
for (i in 1:nrow(data.test)) {
# displaying observation number
print(paste0(i, "/", nrow(data.test)))
# extracting artist and user
user   <- data.test$user_id[i]
artist <- data.test$artist_id[i]
# extracting artists played by user
history <- data.train$artist_id[data.train$user_id == user]
# checking if this artist has already been played
if (artist %in% history) {
naive.pred[i] <- 1
}else{
naive.pred[i] <- 0
}
}
# creating submission
submit(naive.pred, data = data.test, folder = subm.folder, file = "naive_submission.csv")
submit(naive.pred, data = data.test, folder = subm.folder, file = "naive_artist.csv")
summary(naive.pred)
history
table(history)
table(history)[table(history) > 1]
history
table(history)[table(history) > 0]
table(history)[artist]
###################################
#                                 #
#             SETTINGS            #
#                                 #
###################################
# clearing the memory
rm(list = ls())
# setting work directory
work.folder <- "/Users/Kozodoi/Documents/Competitions/DSG_2017"
setwd(work.folder)
# setting inner folders
code.folder <- "codes"
data.folder <- "data"
func.folder <- "functions"
subm.folder <- "submissions"
# loading libraries
library(anytime)
# loading functions
source(file.path(code.folder, "code_0_helper_functions.R"))
###################################
#                                 #
#            NAIVE MODEL          #
#                                 #
###################################
# loading data sets
load(file.path(data.folder, "data_train.Rda"))
load(file.path(data.folder, "data_test.Rda"))
# keeping the artist data
data.train <- data.train[, c("user_id", "artist_id", "sample_id", "is_listened")]
data.test  <- data.test[,  c("user_id", "artist_id", "sample_id", "is_listened")]
# dropping duplicates and skipped tracks
data.train <- data.train[data.train$is_listened == 1, ]
data.train <- data.train[!(duplicated(data.train)),   ]
# empty prediction vector
naive.pred <- rep(NA, nrow(data.test))
# checking if the artist has already been played
for (i in 1:nrow(data.test)) {
# displaying observation number
print(paste0(i, "/", nrow(data.test)))
# extracting artist and user
user   <- data.test$user_id[i]
artist <- data.test$artist_id[i]
# extracting artists played by user
history <- data.train$artist_id[data.train$user_id == user]
# checking if this artist has already been played
if (table(history)[artist] > 1) {
naive.pred[i] <- 1
}else{
naive.pred[i] <- 0
}
}
###################################
#                                 #
#             SETTINGS            #
#                                 #
###################################
# clearing the memory
rm(list = ls())
# setting work directory
work.folder <- "/Users/Kozodoi/Documents/Competitions/DSG_2017"
setwd(work.folder)
# setting inner folders
code.folder <- "codes"
data.folder <- "data"
func.folder <- "functions"
subm.folder <- "submissions"
# loading libraries
library(anytime)
# loading functions
source(file.path(code.folder, "code_0_helper_functions.R"))
###################################
#                                 #
#            NAIVE MODEL          #
#                                 #
###################################
# loading data sets
load(file.path(data.folder, "data_train.Rda"))
load(file.path(data.folder, "data_test.Rda"))
# keeping the artist data
data.train <- data.train[, c("user_id", "artist_id", "sample_id", "is_listened")]
data.test  <- data.test[,  c("user_id", "artist_id", "sample_id", "is_listened")]
# dropping duplicates and skipped tracks
data.train <- data.train[data.train$is_listened == 1, ]
data.train <- data.train[!(duplicated(data.train)),   ]
# empty prediction vector
naive.pred <- rep(NA, nrow(data.test))
# checking if the artist has already been played
for (i in 1:nrow(data.test)) {
# displaying observation number
print(paste0(i, "/", nrow(data.test)))
# extracting artist and user
user   <- data.test$user_id[i]
artist <- data.test$artist_id[i]
# extracting artists played by user
history <- data.train$artist_id[data.train$user_id == user]
# checking if this artist has already been played
if (table(history)[artist] >= 3) {
naive.pred[i] <- 1
}else{
naive.pred[i] <- 0
}
}
# creating submission
submit(naive.pred, data = data.test, folder = subm.folder, file = "naive_artist.csv")
summary(naiv.pred)
summary(naive.pred)
###################################
#                                 #
#             SETTINGS            #
#                                 #
###################################
# clearing the memory
rm(list = ls())
# setting work directory
work.folder <- "/Users/Kozodoi/Documents/Competitions/DSG_2017"
setwd(work.folder)
# setting inner folders
code.folder <- "codes"
data.folder <- "data"
func.folder <- "functions"
subm.folder <- "submissions"
# loading libraries
library(anytime)
# loading functions
source(file.path(code.folder, "code_0_helper_functions.R"))
###################################
#                                 #
#            NAIVE MODEL          #
#                                 #
###################################
# loading data sets
load(file.path(data.folder, "data_train.Rda"))
load(file.path(data.folder, "data_test.Rda"))
# keeping the artist data
data.train <- data.train[, c("user_id", "artist_id", "sample_id", "is_listened")]
data.test  <- data.test[,  c("user_id", "artist_id", "sample_id", "is_listened")]
# dropping duplicates and skipped tracks
data.train <- data.train[data.train$is_listened == 1, ]
data.train <- data.train[!(duplicated(data.train)),   ]
# empty prediction vector
naive.pred <- rep(NA, nrow(data.test))
i = 1
i=1
load(file.path(data.folder, "data_train.Rda"))
load(file.path(data.folder, "data_test.Rda"))
# dropping skipped tracks
data.train <- data.train[data.train$is_listened == 1, ]
# empty prediction vector
naive.pred <- rep(NA, nrow(data.test))
i=1
# displaying observation number
print(paste0(i, "/", nrow(data.test)))
# extracting artist and user
user   <- data.test$user_id[i]
history <- data.train$genre[data.train$user_id == user]
history <- data.train$genre_id[data.train$user_id == user]
history
genre <- data.test$genre_id[i]
genre
history <- data.train$genre_id[data.train$user_id == user]
history
(genre %in% history)
table(history)
table(history)[genre]
table(history)[genre]
table(history)[genre]/sum(table(history))
i=2
# displaying observation number
print(paste0(i, "/", nrow(data.test)))
# extracting user and genre
user  <- data.test$user_id[i]
genre <- data.test$genre_id[i]
# extracting artists played by user
history <- data.train$genre_id[data.train$user_id == user]
genre
history
(genre %in% history)
table(history)[genre]/sum(table(history))
table(history)
# checking if the artist has already been played
for (i in 1:nrow(data.test)) {
# displaying observation number
print(paste0(i, "/", nrow(data.test)))
# extracting user and genre
user  <- data.test$user_id[i]
genre <- data.test$genre_id[i]
# extracting artists played by user
history <- data.train$genre_id[data.train$user_id == user]
# checking if this artist has already been played
if (genre %in% history) {
naive.pred[i] <- table(history)[genre]/sum(table(history))
}else{
naive.pred[i] <- 0
}
}
summary(naive.pred)
naive.pred[is.na(naive.pred)]
naive.pred[is.na(naive.pred)] <- mean(naive.pred, na.rm = T)
submit(naive.pred, data = data.test, folder = subm.folder, file = "naive_genre.csv")
